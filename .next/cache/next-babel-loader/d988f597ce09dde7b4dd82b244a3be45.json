{"ast":null,"code":"import _classCallCheck from \"/Users/vera/Documents/Project/Private/static/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vera/Documents/Project/Private/static/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vera/Documents/Project/Private/static/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vera/Documents/Project/Private/static/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vera/Documents/Project/Private/static/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport * as THREE from 'three'; // import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\n\nimport './Line.scss';\n\nvar Line = /*#__PURE__*/function (_Component) {\n  _inherits(Line, _Component);\n\n  function Line() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Line);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Line)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.init = function () {\n      //相机参数\n\n      /**\n       * 正投影相机设置\n       */\n      var camera;\n      var width = window.innerWidth; //窗口宽度\n\n      var height = window.innerHeight; //窗口高度\n\n      camera = new THREE.OrthographicCamera(width / -2, width / 2, height / 2, height / -2, 1, 1000); // camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 1000 );  // 相机\n\n      camera.position.set(0, 0, 500); // z轴代表眼睛离屏幕的远近位置， xy代表与屏幕中心点 同一视平线， （默认位置为:0,0,0.）\n      // camera.lookAt(0,0,0);\n      // 生成渲染器\n\n      var renderer;\n      renderer = new THREE.WebGLRenderer(); // 渲染器\n\n      renderer.setSize(window.innerWidth, window.innerHeight); //设置渲染器的大小\n\n      document.body.appendChild(renderer.domElement); // 材质\n\n      var material;\n      material = new THREE.LineBasicMaterial({\n        color: 'white',\n        linewidth: 2\n      }); // 画直线\n\n      var points = [];\n      points.push(new THREE.Vector2(0, 2 * window.innerHeight, 0), new THREE.Vector2(0, -window.innerHeight / 5, 0)); // 声明形状(画直线)\n\n      var geometry;\n      geometry = new THREE.BufferGeometry().setFromPoints(points);\n      var mesh;\n      mesh = new THREE.Line(geometry, material); // 网格 \n\n      mesh.position.y = 700; // 声明场景\n\n      var scene;\n      scene = new THREE.Scene(); // 场景\n\n      scene.add(mesh); // animate\n\n      var animate = function animate() {\n        if (mesh.position.y === window.innerHeight) {\n          mesh.position.y = window.innerHeight / 3;\n          return;\n        } //移动物体x、y\n\n\n        if (mesh.position.y > -window.innerHeight / 2) {\n          mesh.position.y -= 20;\n        } else {\n          mesh.position.y = window.innerHeight;\n        } //移动相机x、y、z\n        // if(camera.position.z < 500){\n        //   camera.position.y += 2\n        // }\n\n\n        renderer.clear();\n        renderer.render(scene, camera);\n        requestAnimationFrame(animate);\n      };\n\n      animate();\n    };\n\n    return _this;\n  }\n\n  _createClass(Line, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.init();\n    } //定义应用所需的组件:相机,场景,渲染器\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"line\"\n      }, React.createElement(\"div\", {\n        id: \"info\"\n      }, \"SUMO\"));\n    }\n  }]);\n\n  return Line;\n}(Component);\n\nexport default Line;","map":null,"metadata":{},"sourceType":"module"}