{"ast":null,"code":"import _classCallCheck from \"/Users/vera/Documents/Project/Private/static/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vera/Documents/Project/Private/static/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vera/Documents/Project/Private/static/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vera/Documents/Project/Private/static/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vera/Documents/Project/Private/static/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport * as THREE from 'three'; // import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js'; // 轨道控制器\n\nimport './Axis.scss';\nvar renderer, width, height;\nvar camera, scene, light, cube;\n\nvar Axis = /*#__PURE__*/function (_Component) {\n  _inherits(Axis, _Component);\n\n  function Axis() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Axis);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Axis)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.initThree = function () {\n      width = document.getElementById('canvas-frame').clientWidth;\n      height = document.getElementById('canvas-frame').clientHeight;\n      renderer = new THREE.WebGLRenderer({\n        antialias: true\n      });\n      renderer.setSize(width, height);\n      document.getElementById('canvas-frame').appendChild(renderer.domElement);\n      renderer.setClearColor('block', 1.0);\n    };\n\n    _this.initCamera = function () {\n      camera = new THREE.PerspectiveCamera(45, width / height, 1, 1000);\n      camera.position.x = 0;\n      camera.position.y = 1000;\n      camera.position.z = 0;\n      camera.up.x = 0;\n      camera.up.y = 0;\n      camera.up.z = 1;\n      camera.lookAt({\n        x: 0,\n        y: 0,\n        z: 0\n      });\n    };\n\n    _this.initScene = function () {\n      scene = new THREE.Scene();\n    };\n\n    _this.initLight = function () {\n      light = new THREE.DirectionalLight('red', 1.0, 0);\n      light.position.set(100, 100, 200);\n      scene.add(light);\n    };\n\n    _this.initObject = function () {\n      var geometry = new THREE.Geometry(); // B begin\n\n      geometry.vertices.push(new THREE.Vector3(-500, 0, 0));\n      geometry.vertices.push(new THREE.Vector3(500, 0, 0)); // B end\n\n      for (var i = 0; i <= 20; i++) {\n        var line = new THREE.Line(geometry, new THREE.LineBasicMaterial({\n          color: 0x000000,\n          opacity: 0.2\n        }));\n        line.position.z = i * 50 - 500;\n        scene.add(line); // var line = new THREE.Line( geometry, new THREE.LineBasicMaterial( { color: 0x000000, opacity: 0.2 } ) );\n        // line.position.x = ( i * 50 ) - 500;\n        // line.rotation.y = 90 * Math.PI / 180;\n        // scene.add( line );\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Axis, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.initThree();\n      this.initCamera();\n      this.initScene();\n      this.initLight();\n      this.initObject();\n      renderer.clear();\n      renderer.render(scene, camera);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"axis\"\n      }, \"4444\", React.createElement(\"div\", {\n        id: \"canvas-frame\"\n      }));\n    }\n  }]);\n\n  return Axis;\n}(Component);\n\nexport default Axis;","map":null,"metadata":{},"sourceType":"module"}