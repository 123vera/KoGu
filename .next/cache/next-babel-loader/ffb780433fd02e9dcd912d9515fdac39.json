{"ast":null,"code":"import _slicedToArray from \"/Users/vera/Documents/Project/Private/static/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$(),\n    _jsxFileName = \"/Users/vera/Documents/Project/Private/static/src/components/hook/ExampleCount/index.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport style from './index.scss'; // 自定义hook\n\nfunction useTitle(content) {\n  _s();\n\n  const _useState = useState(content || ''),\n        _useState2 = _slicedToArray(_useState, 2),\n        value = _useState2[0],\n        setValue = _useState2[1]; //  document.title = value\n\n\n  const onChange = e => {\n    setValue(e.target.value);\n  };\n\n  return {\n    value,\n    onChange\n  };\n}\n\n_s(useTitle, \"mxO4e/QCUS4JaZjhpUUrb9oqql8=\");\n\nfunction Count() {\n  _s2();\n\n  const _useState3 = useState(3),\n        _useState4 = _slicedToArray(_useState3, 2),\n        count = _useState4[0],\n        setCount = _useState4[1];\n\n  const _useState5 = useState('Mary'),\n        _useState6 = _slicedToArray(_useState5, 2),\n        name = _useState6[0],\n        setName = _useState6[1];\n\n  const _useState7 = useState('--'),\n        _useState8 = _slicedToArray(_useState7, 2),\n        value = _useState8[0],\n        setValue = _useState8[1];\n\n  const inputProps = useTitle(name); // 如果想执行只运行一次的 effect（仅在组件挂载和卸载时执行），可以传递一个空数组（[]）作为第二个参数。这就告诉 React 你的 effect 不依赖于 props 或 state 中的任何值，所以它永远都不需要重复执行。\n\n  useEffect(() => {\n    if (count < 10) {\n      document.title = `关于HOOK${count}`;\n    } else {\n      document.title = `关于HOOK${name}`;\n    }\n  }, [count, name]);\n  return React.createElement(\"div\", {\n    id: style.react,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, count, \" \"), React.createElement(\"button\", {\n    onClick: () => setCount(count + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"add\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => setName(name),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"addName\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"input\", Object.assign({}, inputProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => setValue('btn1'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"btn1\", value), React.createElement(\"button\", {\n    onClick: () => setValue('btn2'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"btn2\", value), React.createElement(\"div\", {\n    className: \"position-test\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"position-test\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"position-sticky\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"position-test\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"position-test\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"position-test\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }));\n}\n\n_s2(Count, \"/e3GOSozfJ070d49m+ADh3Zdw0c=\", false, function () {\n  return [useTitle];\n});\n\n_c = Count;\nexport default Count;\n\nvar _c;\n\n$RefreshReg$(_c, \"Count\");","map":{"version":3,"sources":["/Users/vera/Documents/Project/Private/static/src/components/hook/ExampleCount/index.js"],"names":["React","useState","useEffect","style","useTitle","content","value","setValue","onChange","e","target","Count","count","setCount","name","setName","inputProps","document","title","react"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport style from './index.scss'\n\n   // 自定义hook\n   function useTitle(content) {\n     const [ value, setValue ] = useState(content || '')\n    //  document.title = value\n\n      const onChange = (e) => {\n        setValue(e.target.value)\n      }\n       return {value, onChange}\n    }\n\n\n  function Count (){\n    const [ count, setCount] = useState(3)\n    const [ name, setName] = useState('Mary')\n    const [ value, setValue ] = useState('--')\n\n    const inputProps = useTitle(name);\n  \n    // 如果想执行只运行一次的 effect（仅在组件挂载和卸载时执行），可以传递一个空数组（[]）作为第二个参数。这就告诉 React 你的 effect 不依赖于 props 或 state 中的任何值，所以它永远都不需要重复执行。\n    useEffect(() => {\n      if(count <10) {\n        document.title =`关于HOOK${count}`\n      } else {\n        document.title = `关于HOOK${name}`\n      }\n    }, [count, name])\n\n\n\n    return (\n      <div id={style.react}>\n        <p>{count} </p>  \n        <button onClick={() => setCount(count+1)}>add</button>\n        <br/>\n        <button onClick={() => setName(name)}>addName</button>\n        <br/>\n        <input {...inputProps}/>\n        <br/>\n        <button onClick={() => setValue('btn1')}>btn1{value}</button>\n        <button onClick={() => setValue('btn2')}>btn2{value}</button>\n\n\n        {/* position: sticky  粘性定位 当滚动到某个位置时，设置了position:sticky的元素会悬停不动*/}\n        <div className=\"position-test\"></div>\n        <div className=\"position-test\"></div>\n\n        <div className=\"position-sticky\"></div>\n\n        <div className=\"position-test\"></div>\n        <div className=\"position-test\"></div>\n        <div className=\"position-test\"></div>\n      </div>\n    )\n  }\n\n  export default Count\n"]},"metadata":{},"sourceType":"module"}