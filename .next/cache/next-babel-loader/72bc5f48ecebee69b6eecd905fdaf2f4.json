{"ast":null,"code":"import _classCallCheck from \"/Users/vera/Documents/Project/Private/static/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vera/Documents/Project/Private/static/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vera/Documents/Project/Private/static/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vera/Documents/Project/Private/static/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vera/Documents/Project/Private/static/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport * as THREE from 'three'; // import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\n\nimport './Curve.scss';\n\nvar Curve = /*#__PURE__*/function (_Component) {\n  _inherits(Curve, _Component);\n\n  function Curve() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Curve);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Curve)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.init = function () {\n      //相机参数\n\n      /**\n       * 正投影相机设置\n       */\n      var camera;\n      var width = window.innerWidth; //窗口宽度\n\n      var height = window.innerHeight; //窗口高度\n\n      camera = new THREE.OrthographicCamera(width / -2, width / 2, height / 2, height / -2, 1, 1000); // camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 1000 );  // 相机\n\n      camera.position.set(0, 0, 50); // z轴代表眼睛离屏幕的远近位置， xy代表与屏幕中心点 同一视平线， （默认位置为:0,0,0.）\n      // camera.lookAt(0,0,0);\n      // 生成渲染器\n\n      var renderer;\n      renderer = new THREE.WebGLRenderer(); // 渲染器\n\n      renderer.setSize(window.innerWidth, window.innerHeight); //设置渲染器的大小\n\n      document.body.appendChild(renderer.domElement); // 材质\n\n      var material;\n      material = new THREE.LineBasicMaterial({\n        color: 'white',\n        linewidth: 2\n      }); // 画弧线\n\n      var curve = new THREE.CatmullRomCurve3([new THREE.Vector3(0, 500, 0), new THREE.Vector3(20, 200, 0), new THREE.Vector3(-10, 0, 0), new THREE.Vector3(-20, -150, 0), new THREE.Vector3(30, -500, 0)]);\n      var points = curve.getPoints(100); // 这个参数决定曲线是否， 50等分点\n      // 声明形状(画直线)\n\n      var geometry;\n      geometry = new THREE.BufferGeometry().setFromPoints(points); // geometry.setAttribute( 'position', new THREE.Float32BufferAttribute( vertices, 3 ) ); // 3 代表3维坐标\n\n      var mesh;\n      mesh = new THREE.Line(geometry, material); // 网格 \n      // 声明场景\n\n      var scene;\n      scene = new THREE.Scene(); // 场景\n\n      scene.add(mesh);\n\n      for (var i = 0; i < 100; i++) {\n        mesh.position.x = (Math.random() - 0.4) * 1000;\n        mesh.position.y = Math.random() - 0.5;\n        mesh.position.z = Math.random() - 0.5;\n        console.log(mesh);\n        scene.add(mesh);\n      } // animate\n\n\n      var animate = function animate() {\n        mesh.position.x = (Math.random() - 0.9) * 600;\n        renderer.clear();\n        renderer.render(scene, camera);\n        requestAnimationFrame(animate);\n      };\n\n      animate();\n    };\n\n    return _this;\n  }\n\n  _createClass(Curve, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.init();\n    } //定义应用所需的组件:相机,场景,渲染器\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"curve\"\n      }, React.createElement(\"div\", {\n        id: \"info\"\n      }, \"Curve\"));\n    }\n  }]);\n\n  return Curve;\n}(Component);\n\nexport default Curve;","map":null,"metadata":{},"sourceType":"module"}