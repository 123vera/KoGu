{"ast":null,"code":"import _slicedToArray from \"/Users/vera/Documents/Project/Private/static/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport style from './index.scss'; // 自定义hook\n\nfunction useTitle(content) {\n  var _useState = useState(content || ''),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1]; //  document.title = value\n\n\n  var onChange = function onChange(e) {\n    setValue(e.target.value);\n  };\n\n  return {\n    value: value,\n    onChange: onChange\n  };\n}\n\nfunction Count() {\n  var _useState3 = useState(3),\n      _useState4 = _slicedToArray(_useState3, 2),\n      count = _useState4[0],\n      setCount = _useState4[1];\n\n  var _useState5 = useState('Mary'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      name = _useState6[0],\n      setName = _useState6[1];\n\n  var _useState7 = useState('--'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      value = _useState8[0],\n      setValue = _useState8[1];\n\n  var inputProps = useTitle(name); // 如果想执行只运行一次的 effect（仅在组件挂载和卸载时执行），可以传递一个空数组（[]）作为第二个参数。这就告诉 React 你的 effect 不依赖于 props 或 state 中的任何值，所以它永远都不需要重复执行。\n\n  useEffect(function () {\n    if (count < 10) {\n      document.title = \"\\u5173\\u4E8EHOOK\".concat(count);\n    } else {\n      document.title = \"\\u5173\\u4E8EHOOK\".concat(name);\n    }\n  }, [count, name]);\n  return React.createElement(\"div\", {\n    id: style.react\n  }, React.createElement(\"p\", null, count, \" \"), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setCount(count + 1);\n    }\n  }, \"add\"), React.createElement(\"br\", null), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setName(name);\n    }\n  }, \"addName\"), React.createElement(\"br\", null), React.createElement(\"input\", inputProps), React.createElement(\"br\", null), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setValue('btn1');\n    }\n  }, \"btn1\", value), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setValue('btn2');\n    }\n  }, \"btn2\", value), React.createElement(\"div\", {\n    className: \"position-test\"\n  }), React.createElement(\"div\", {\n    className: \"position-test\"\n  }), React.createElement(\"div\", {\n    className: \"position-sticky\"\n  }), React.createElement(\"div\", {\n    className: \"position-test\"\n  }), React.createElement(\"div\", {\n    className: \"position-test\"\n  }), React.createElement(\"div\", {\n    className: \"position-test\"\n  }));\n}\n\nexport default Count;","map":null,"metadata":{},"sourceType":"module"}