{"version":3,"sources":["components/hook/ExampleCount/index.js","pages/home.js","mock/index.js","pages/threejs/axis.js","components/common/InputItem/index.js","components/hook/Interview/index.js","components/common/HtmlTag/index.js","pages/animate.js","pages/threejs/Line.js","pages/threejs/Curve.js","pages/grid.js","pages/viinet.js","components/common/CommonHeader/index.js","components/common/DomToImage/index.js","pages/index.js","App.js","serviceWorker.js","index.js"],"names":["Count","useState","count","setCount","name","setName","value","setValue","inputProps","content","onChange","e","target","useTitle","useEffect","document","title","id","style","react","onClick","className","Home","mockjs","mock","Date","getTime","req","res","setup","timeout","users","axios","get","then","console","log","Router","router","pathname","push","href","cursor","text","onCopy","alert","Component","renderer","width","height","camera","scene","light","InputItem","state","tabIndex","googleUser","profile","getBasicProfile","getId","getName","getImageUrl","getEmail","window","gapi","auth2","getAuthInstance","signOut","this","data-onsuccess","htmlFor","type","required","size","multiple","list","step","max","min","autoComplete","alt","Index","filterArr","arr","arr2","map","includes","Number","i","sort","a","b","result","Map","intersection","tarArr","args","reduce","prev","curr","Set","filter","item","flat","myMap","set","has","HtmlTag","hrefLang","rel","src","border","usemap","shape","coords","dir","span","class","scope","datetime","open","checked","for","Animate","Line","init","material","innerWidth","innerHeight","THREE","position","setSize","body","appendChild","domElement","color","linewidth","geometry","mesh","points","setFromPoints","y","add","animate","clear","render","requestAnimationFrame","Axis","initThree","getElementById","clientWidth","clientHeight","antialias","setClearColor","initCamera","x","z","up","lookAt","initScene","initLight","initObject","vertices","line","opacity","Curve","getPoints","Math","random","data-toggle","data-target","aria-expanded","aria-controls","DomToImage","HomeComponent","lazy","HtmlTagComponent","App","setProperty","fallback","path","component","IndexHome","Grid","Interview","Viinet","withRouter","Boolean","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eadb2e4b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport style from './index.scss'\n\n   // 自定义hook\n   function useTitle(content) {\n     const [ value, setValue ] = useState(content || '')\n    //  document.title = value\n\n      const onChange = (e) => {\n        setValue(e.target.value)\n      }\n       return {value, onChange}\n    }\n\n\n  function Count (){\n    const [ count, setCount] = useState(3)\n    const [ name, setName] = useState('Mary')\n    const [ value, setValue ] = useState('--')\n\n    const inputProps = useTitle(name);\n  \n    // 如果想执行只运行一次的 effect（仅在组件挂载和卸载时执行），可以传递一个空数组（[]）作为第二个参数。这就告诉 React 你的 effect 不依赖于 props 或 state 中的任何值，所以它永远都不需要重复执行。\n    useEffect(() => {\n      if(count <10) {\n        document.title =`关于HOOK${count}`\n      } else {\n        document.title = `关于HOOK${name}`\n      }\n    }, [count, name])\n\n\n\n    return (\n      <div id={style.react}>\n        <p>{count} </p>  \n        <button onClick={() => setCount(count+1)}>add</button>\n        <br/>\n        <button onClick={() => setName(name)}>addName</button>\n        <br/>\n        <input {...inputProps}/>\n        <br/>\n        <button onClick={() => setValue('btn1')}>btn1{value}</button>\n        <button onClick={() => setValue('btn2')}>btn2{value}</button>\n\n\n        {/* position: sticky  粘性定位 当滚动到某个位置时，设置了position:sticky的元素会悬停不动*/}\n        <div className=\"position-test\"></div>\n        <div className=\"position-test\"></div>\n\n        <div className=\"position-sticky\"></div>\n\n        <div className=\"position-test\"></div>\n        <div className=\"position-test\"></div>\n        <div className=\"position-test\"></div>\n      </div>\n    )\n  }\n\n  export default Count\n","import React, { Component } from 'react';\nimport Count from '../components/hook/ExampleCount'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport axios from \"axios\";\nimport {Router} from 'react-router-dom'\n// import Router from 'next/router'\nimport \"../mock\"\n// import JsTool from './../components/common/JsTool'\nimport './home.scss'\n\n// 如果你在beforePopState中返回 false，Router将不会执行popstate事件。\n// Router.beforePopState(({ url, as, options }) => {\n//   // I only want to allow these two routes!\n//   if (as !== \"/\" || as !== \"/other\") {\n//     // Have SSR render bad routes as a 404.\n//     window.location.href = as\n//     return false\n//   }\n\n//   return true\n// });\n\nclass Home extends Component {\n  componentDidMount(){\n    axios\n    .get('/api/tags') //这列的'/api/tags'与mock.js文件里的地址一致\n    .then(res=>{\n          //  console.log('323', JSON.stringify(res.data, null, 4))\n    })\n\n    axios\n    .get(`/api/users/create`) //这列的'/api/users/create'与mock.js文件里的地址一致\n    .then(res=>{\n        console.log('22222323', res)\n    })\n\n    // Mock.mock( rurl, template )\n    axios\n    .get(`/api/currentUser`) //这列的'/api/currentUser'与mock.js文件里的地址一致\n    .then(res=>{\n        console.log('res', res)\n    })\n  }\n\n  render (){\n    console.log(Router.router && Router.router.pathname) \n\n    return (\n      <div className='home'>\n        <h2 onClick={() => Router.push('/viinet')}>HookHookHookHookHookHook</h2>\n        <a href=\"weixin://\" >打开微信l</a> \n\n       <CopyToClipboard\n            style={{ cursor: 'pointer' }}\n            text={'这是一段复制内容'}\n            onCopy={() => alert('複製成功')}\n          >\n            <span>{'複製地址'}</span>\n          </CopyToClipboard> \n        {/* <JsTool/> */}\n        <Count/>\n      </div>\n    )\n  }\n}\n\nexport default Home","import mockjs from 'mockjs';\n// import { delay } from 'roadhog-api-doc';  // 需要添加所有的请求延迟的时候， 可以通过第三方插件来简化这个问题\n\n\n// 当客户端（浏览器）发送请求，如：GET /api/users，\n// 那么本地启动的 umi dev 会跟此配置文件匹配请求路径以及方法，\n// 如果匹配到了，就会将请求通过配置处理，就可以像样例一样，\n// 你可以直接返回数据，也可以通过函数处理以及重定向到另一个服务器。\n\n// 以下真假切换接口\n\n// if (process.env.NODE_ENV === 'development') {\n//   require('./src/mock')\n// }\n\n// let postApi = (path, mock) => {\n//   // 当为0的时候\n//   return path + (mock ? '' : '.mock'); // '/todoList.mock'\n// };\n\n// export default {\n//   \"newsList\": postApi(\"/api/order/news\"),\n//   \"newsList2\": postApi(\"/api/newsList2\"),\n//   \"todoList\": postApi(\"/todoList\", 0)  // postApi方法接收两个参数，接口地址及是否需要mock数据，0需要，1不需要\n// }\n\n// 以上真假切换接口\n\nconst getNotice =  (req, res) => { res.end('OK'); }\n\n const proxy = {\n  // Mock.mock( rurl, template )\n  'GET /api/currentUser': mockjs.mock( '',{\n    'code': 0,\n    'data': {\n        'list|1-10': [{\n            // 属性 id 是一个自增数，起始值为 1，每次增 1\n            'id|+1': 1,\n            'title': '前端人人@id',\n            'status': 1\n        }]\n    },\n    'message': '操作成功',\n    'systemDate': new Date().getTime()\n  }),\n\n  // 使用 mockjs 等三方库   Mock.mock( rurl, rtype, template )\n  'GET /api/tags': mockjs.mock('/api/tags', 'get', {\n    'list|100': [{ name: '@city', 'value|1-10': 50, 'type|0-2': 1 }],\n  }),\n\n  // 添加跨域请求头 Mock.mock( rurl, rtype, function( options ) )\n  '/api/users/create': mockjs.mock('/api/users/create', (req, res) => {\n    // 指定被拦截的 Ajax 请求的响应时间，单位是毫秒。值可以是正整数，例如 400，表示 400 毫秒 后才会返回响应内容；也可以是横杠 '-' 风格的字符串，例如 '200-600'，表示响应时间介于 200 和 600 毫秒之间。默认值是'10-100'。\n    mockjs.setup({\n      timeout: 400 \n    })\n    // res.setHeader('Access-Control-Allow-Origin', '*');\n    return { users: [1, 2] } // 直接输出res.data = { users: [1, 2] }\n  \n  }),\n\n   // 支持制定执行回调\n  'GET /api/project/notice': getNotice,\n\n   // 支持值为 Object 和 Array\n   'GET /api/users': { users: [1, 2] },\n\n\n   // 静态 Mock 数据\n  '/api/random': mockjs.mock({\n    // 只随机一次\n    'number|1-100': 100,\n  }),\n\n  // 动态 Mock 数据\n   '/api/randoms': (req, res) => {\n    res.send(mockjs.mock({\n      // 每次请求均产生随机值\n      'number|1-100': 100,\n    }))\n  },\n};\n\n\n\nexport default proxy\n\n\n\n// 调用 delay 函数，统一处理\n// export default delay(proxy, 1000) ","\n\nimport React, { Component } from 'react';\nimport * as THREE from 'three';\n// import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js'; // 轨道控制器\nimport './axis.scss'\n\nvar renderer, width, height;\nvar camera,scene, light, cube;\n\nclass Axis extends Component {\n  componentDidMount () {\n    this.initThree();\n    this.initCamera();\n    this.initScene();\n    this.initLight();\n    this.initObject();\n    renderer.clear();\n    renderer.render(scene, camera);\n  }\n  \n   initThree =()=>{\n      width = document.getElementById('canvas-frame').clientWidth;\n      height = document.getElementById('canvas-frame').clientHeight;\n      renderer = new THREE.WebGLRenderer({\n          antialias : true\n      });\n      renderer.setSize(width, height);\n      document.getElementById('canvas-frame').appendChild(renderer.domElement);\n      renderer.setClearColor('block', 1.0);\n  }\n\n  \n             initCamera =()=>{\n                camera = new THREE.PerspectiveCamera(45, width / height, 1, 1000);\n                camera.position.x = 0;\n                camera.position.y = 1000;\n                camera.position.z = 0;\n                camera.up.x = 0;\n                camera.up.y = 0;\n                camera.up.z = 1;\n                camera.lookAt({\n                    x : 0,\n                    y : 0,\n                    z : 0\n                });\n            }\n  \n   \n           initScene =()=>{\n                scene = new THREE.Scene();\n            }\n\n      \n             initLight =()=>{\n                light = new THREE.DirectionalLight('red', 1.0, 0);\n                light.position.set(100, 100, 200);\n                scene.add(light);\n            }\n\n\ninitObject =()=>{\n    var geometry = new THREE.Geometry();\n    // B begin\n    geometry.vertices.push( new THREE.Vector3( - 500, 0, 0 ) );\n    geometry.vertices.push( new THREE.Vector3( 500, 0, 0 ) );\n    // B end\n\n    for ( var i = 0; i <= 20; i ++ ) {\n\n        var line = new THREE.Line( geometry, new THREE.LineBasicMaterial( { color: 0x000000, opacity: 0.2 } ) );\n        line.position.z = ( i * 50 ) - 500;\n        scene.add( line );\n\n        // var line = new THREE.Line( geometry, new THREE.LineBasicMaterial( { color: 0x000000, opacity: 0.2 } ) );\n        // line.position.x = ( i * 50 ) - 500;\n        // line.rotation.y = 90 * Math.PI / 180;\n        // scene.add( line );\n    }\n}\n\n  render (){\n    return (\n      <div className='axis'>\n\n      4444\n        <div id=\"canvas-frame\"></div>\n      </div>\n    )\n  }\n}\n\nexport default Axis","import React, { Component } from 'react';\nimport './index.scss'\n\n\nclass InputItem extends Component {\n  state = {\n    tabIndex: 0\n  }\n  onSignIn(googleUser) {\n    var profile = googleUser.getBasicProfile()\n    console.log('ID: ' + profile.getId()) // Do not send to your backend! Use an ID token instead.\n    console.log('Name: ' + profile.getName())\n    console.log('Image URL: ' + profile.getImageUrl())\n    console.log('Email: ' + profile.getEmail()) // This is null if the 'email' scope is not present.\n  }\n\n  signOut() {\n    var auth2 = window && window.gapi && window.gapi.auth2.getAuthInstance()\n    auth2.signOut().then(function() {\n      console.log('User signed out.')\n    })\n  }\n  render(){\n    const { tabIndex } = this.state\n    return (\n       <div>  \n         \n    <div className=\"g-signin2\" data-onsuccess=\"onSignIn\"></div>\n    <a href=\"#\" onClick={this.signOut}>Sign out</a>\n\n    <form className='input-wrapper'>\n <header className=\"App-header\">Header</header>\n\n      <label htmlFor=\"text\">\n        <span>Text ：</span>\n        <input type=\"text\" id='text'/>\n      </label>\n\n      <label htmlFor=\"color\">\n        <span>Color ：</span>\n        <input type=\"color\" id='color'/>\n      </label>\n\n      <label htmlFor=\"date\">\n        <span>Date ：</span>\n        <input type=\"date\" id='date'/>\n      </label>\n\n      <label htmlFor=\"time\">\n        <span>Time ：</span>\n        <input type=\"time\" id='time'/>\n      </label>\n\n      <label htmlFor=\"datetime\">\n        <span>Datetime ：</span>\n        <input type=\"datetime-local\" id='datetime'/>\n      </label>\n\n     {/* multiple 允许输入多个邮件地址（用逗号分隔）； list 规定默认列表 */}\n     <label htmlFor=\"email\">\n        <span>Email ：</span>\n        <input type=\"email\" required size=\"1\" id='email' multiple list=\"defaultEmails\"/>\n        <datalist id=\"defaultEmails\">\n          <option value=\"jbond007@mi6.defence.gov.uk\"/>\n          <option value=\"jbourne@unknown.net\"/>\n          <option value=\"nfury@shield.org\"/>\n          <option value=\"tony@starkindustries.com\"/>\n          <option value=\"hulk@grrrrrrrr.arg\"/>\n        </datalist>\n      </label>\n\n      <label htmlFor=\"range\">\n        <span>Range ：</span>\n        <input type=\"range\"  step='1' id='range' max='100' min='10'/>\n      </label>\n\n      <label htmlFor=\"tel\">\n        <span>Tel ：</span>\n        <input type=\"tel\" autoComplete='on' />\n      </label>\n     \n      <label htmlFor=\"url\">\n        <span>Url ：</span>\n        <input type=\"url\" tabIndex={tabIndex} />\n      </label>\n\n      <label htmlFor=\"week\">\n        <span>Week ：</span>\n        <input type=\"week\" tabIndex='2' />\n      </label>\n      \n      <label htmlFor=\"password\">\n        <span>Password ：</span>\n        <input type=\"password\" tabIndex='2' autoComplete='new-password'/>\n      </label>\n      \n      <label htmlFor=\"image\">\n        <span>Image ：</span>\n        <input type=\"image\" alt={'/img/logo.png'}/>\n      </label>\n\n      <button type='submit'>提交</button>\n      </form>\n   \n       </div>\n        \n       )\n  }\n}\n\nexport default InputItem","import React, { Component } from 'react';\n// import JsTool from './../components/common/JsTool'\nimport './index.scss'\n// import { keyToTestName } from 'jest-snapshot/build/utils';\n\nclass Index extends Component {\n  componentDidMount (){\n\n    //  arr.flat(depth); depth可以是数字代表变成几维数组（拉平几级），也可以是Infinity关键字（无限级）\n    const arr5 = [1, 2,  , 4, 5];\n    console.log(arr5.flat())  // [1, 2, 4, 5]\n\n\n    // new Map()\n    console.log(new Map()) // Map(0) {}\n    let myMap = new Map();\n\n\n    myMap.set('a string')\n    myMap.set({})\n    myMap.set(function() {})\n    // myMap.size; // 3\n\n    myMap.has('a') // false\n    myMap.has('a string') // true\n    myMap.has({}) // false\n\n    myMap.get('a') // undefined\n    myMap.get('a string') // undefined\n    console.log('myMap',myMap.get('a string')) // myMap\n\n    \n\n    const arr = [2, 7, 11, 1,12, 15]\n    const target = 13\n   this.filterArr(arr, target)\n\n   console.log(this.intersection([1,2,2,1], [2,2]))\n  }\n\n  // 给定一个整数数组 nums 和一个目标值 target ，并在该数组中找出和为目标值的那 两个 整数\n  filterArr = (arr, target) => {\n    let arr2 = []\n    arr.map(value => {\n      if(arr.includes(Number(target - value))) {\n        arr2.push([value, Number(target - value)])\n        }\n    })\n    arr2.map(i => i.sort((a,b) => a-b))\n    let result = new Map(arr2)\n    return [...result]\n  }\n\n  intersection = (...args) => {\n    let tarArr\n    args.reduce((prev, curr)=> {\n    tarArr = [...new Set(prev.filter(item => curr.includes(item)))]\n    })\n    return tarArr\n  }\n\n  render (){\n    return (\n      <div className='inter'>\n       <h2>js题目</h2>\n       <br/>\n        <ul>\n          <li>\n            <p>1.编写一个程序将数组扁平化去并除其中重复部分数据，最终得到一个升序且不重复的数组</p>\n            <code>\n            var arr = [ [1, 2, 2], [3, 4, 5, 5], [6, 7, 8, 9, [11, 12, [12, 13, [14] ] ] ], 10];\n            <br/>\n            const flatArr = arr.flat(Infinity) <br/>\n            const notRepeat = Array.from((new Set(flatArr)))<br/>\n            const sortArr = notRepeat.sort((a, b) => a-b) // 升序\n            </code>\n          </li>\n\n          <li>\n            <p>2.给定一个整数数组 nums 和一个目标值 target ，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。</p>\n            <small>\n                初始化一个 map = new Map();\n                <br/>\n                从第一个元素开始遍历 nums;\n                <br/>\n                获取目标值与 nums[i] 的差值，即 k = target - nums[i] ，判断差值在 map 中是否存在;\n                <br/>\n                不存在（ map.has(k) 为 false ） ，则将 nums[i] 加入到 map 中（key为nums[i], value为 i ，方便查找map中是否存在某值，并可以通过 get 方法直接拿到下标）\n                存在（ map.has(k) ），返回 [map.get(k), i] ，求解结束;\n                <br/>\n                遍历结束，则 nums 中没有符合条件的两个数，返回 [].\n            </small>\n            <code>\n              <br/>\n              调用封装函数this.filterArr()，见代码\n            </code>\n          </li>\n\n          <li>\n            <p>3.给定两个数组，编写一个函数来计算它们的交集</p>\n            <code>\n            const tt = arr1.filter(i => arr2.includes(i) )\n            <br/>\n                console.log(new Set(tt))\n            </code>\n          </li>\n\n       \n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default Index","import React, { Component } from 'react';\nimport './index.scss'\n\n\nclass HtmlTag extends Component {\n  render(){  \n    return (\n      <div>\n <header className=\"App-header\">Header</header>\n\n<ul className='tag'>\n  <li id='mao'> <span>abbr：</span>The <abbr title='pppppp'>PRC</abbr> was founded in 1949 </li>\n  <li> \n    <a href=\"mailto:m.bluth@example.com\" hrefLang='en'>打开邮箱</a>  {/* mailto:  打开邮箱 */}\n    &nbsp;<a href=\"tel: 123456\">打电话</a>  {/* tel:  打电话 */}\n    &nbsp;<a href=\"#top\">返回顶部</a>  {/* #top 或 #:  返回页面顶部 */}\n    &nbsp;<a href=\"www.baidu.com\" target='_blank' rel='noopener norefferrer'>外链</a> \n    &nbsp;<a href=\"#email\">链接到本页email处</a> \n    &nbsp;<a href=\"#Tel\">链接到本页Tel处</a> \n  </li>\n\n  <li>\n    <img\n      src=\"https://cdn.cnviinet.com/static/yaoqing-201905091334.jpg\"\n      border=\"0\"\n      usemap=\"#example-map\"\n      alt=\"Planets\" />\n\n    {/* coords 属性与 shape 属性配合使用，来规定区域的尺寸、形状和位置。图像左上角的坐标是 \"0,0\"。 */}        \n     {/* \n      圆形：shape=\"circle\"，coords=\"x,y,z\"\n      多边形：shape=\"polygon\"，coords=\"x1,y1,x2,y2,x3,y3,...\"\n      矩形：shape=\"rectangle\"，coords=\"x1,y1,x2,y2\" */}\n      <map name=\"example-map\" id=\"example-map\">\n      <area \n      target =\"_blank\"\n      shape=\"circle\" \n      coords=\"0,0,50\" \n      href=\"https://www.baidu.com/\" \n      alt=\"\"\n      />\n\n      <area \n      target =\"_blank\"\n      shape=\"rectangle\" \n      coords=\"51,0,102,102\" \n      href=\"https://www.baidu.com/\" \n      alt=\"\"\n      />\n    </map>\n  </li>\n\n    <li>\n      <article className=\"day-forecast\">\n          <h2>03 March 2018</h2>\n          <p>Rain.</p>\n      </article>\n    </li>\n\n    <li>\n      <a href=\"#mao\">本页面锚链接</a>\n      <a href=\"#mao\">跨页面锚链接</a>\n    </li>\n\n    <li>\n      <bdo>13232</bdo>\n      <br/> \n      <bdo dir='rtl'>13232</bdo>\n      <br/>\n      <bdo dir='ltr'>13232</bdo>\n    </li>\n\n    <li>\n      <blockquote>\n      代表其中的文字是引用内容。通常在渲染时，这部分的内容会有一定的缩进（注 中说明了如何更改）。若引文来源于网络，则可以将原内容的出处 URL 地址设置到 cite 特性上，若要以文本的形式告知读者引文的出处时，可以通过 `cite` 元素。\n      </blockquote>\n      <q>若想使用在行内引用较短的内容而非创建一个单独的引用块，可使用（Quotation）元素，自带引号- q标签。</q>\n    </li>\n\n    <li>\n    <table>\n      <caption>Superheros and sidekicks</caption>\n      <colgroup>\n          <col/>\n          <col span=\"2\" class=\"batman\"/>\n          <col span=\"2\" class=\"flash\"/>\n      </colgroup>\n      <tr>\n          <td> </td>\n          <th scope=\"col\">Batman</th>\n          <th scope=\"col\">Robin</th>\n          <th scope=\"col\">The Flash</th>\n          <th scope=\"col\">Kid Flash</th>\n      </tr>\n      <tr>\n          <th scope=\"row\">Skill</th>\n          <td>Smarts</td>\n          <td>Dex, acrobat</td>\n          <td>Super speed</td>\n          <td>Super speed</td>\n      </tr>\n    </table>\n    </li>\n\n    <li>\n      <ul>\n        <li><data value=\"398\">迷你番茄酱</data></li>\n        <li><data value=\"399\">巨无霸番茄酱</data></li>\n        <li><data value=\"400\">超级巨无霸番茄酱</data></li>\n      </ul>\n    </li>\n    <li>\n     <del>这里是要删除文字的标签</del>\n     \n    </li>\n    <li>\n    <ins datetime='3232-32'>这一段文本是新插入至文档的。</ins>\n    </li>\n    <li>  \n      <details>\n        <summary>挂件的title</summary>\n        挂件展开的内容\n      </details>\n    </li>\n\n    <li>\n      使用 {`<em>`} 表示强调或重读。<br/>\n      使用 {`<strong>`} 表示重要性。<br/>\n      使用 {`<mark>`} 表示相关性。<br/>\n      使用 {`<cite>`} 标记著作名，如一本书、剧本或是一首歌。<br/>\n      使用 {`<dfn>`} 标记术语的定义实例。<br/><br/>\n      em: <em>强调文本</em><br/>\n      strong: <strong>加粗文本</strong><br/>\n      dfn: <dfn>定义项目</dfn><br/>\n      code: <code>一段电脑代码</code><br/>\n      samp: <samp>计算机样本</samp><br/>\n      kbd:<kbd>键盘输入</kbd><br/>\n      var:<var>变量</var>\n    </li>\n\n    <li>\n    dialog: false\n      <dialog open={false}>\n        <p>Greetings, one and all!</p>\n      </dialog>\n    </li>\n\n    <li>  \n      <fieldset>\n        <legend>Title&hellip;</legend>\n        <ul>\n          <li><input type=\"radio\" value=\"1\" id=\"address-switch_1\" checked /><label for=\"address-switch_1\"><input type=\"text\" value=\"19 Quaker Ridge Rd. Bethel CT 06801\" /></label></li>\n          <li><input type=\"radio\" value=\"2\" id=\"address-switch_2\" /><label for=\"address-switch_2\"><input type=\"text\" value=\"1000 Coney Island Ave. Brooklyn NY 11230\" /></label></li>\n          <li><input type=\"radio\" value=\"3\" id=\"address-switch_3\" /><label for=\"address-switch_3\"><input type=\"text\" value=\"2962 Dunedin Cv. Germantown TN 38138\" /></label></li>\n          <li><input type=\"radio\" value=\"4\" id=\"address-switch_4\" /><label for=\"address-switch_4\"><input type=\"text\" value=\"915 E 7th St. Apt 6L. Brooklyn NY 11230\" /></label></li>\n        </ul>\n      </fieldset>\n    </li>\n\n    <li>  \n      <figure>\n      <img src=\"/media/examples/elephant-660-480.jpg\"\n    alt=\"Elephant at sunset\"/>\n    <figcaption>An elephant at sunset</figcaption>\n      </figure>\n    </li>\n\n</ul>\n\n      </div>\n     )\n  }\n}\n\nexport default HtmlTag","import React, { Component } from 'react';\nimport './animate.scss'\n\nclass Animate extends Component {\n  render (){\n    return (\n      <div id='animate'>\n        <header className=\"App-header\">ANIMATE</header>\n        <div className='box'/>\n        </div>\n    )\n  }\n}\nexport default Animate","\n\nimport React, { Component } from 'react';\nimport * as THREE from 'three';\n// import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport './Line.scss'\n\n\n\n\nclass Line extends Component {\n  componentDidMount () {\n      this.init()\n  }\n \n\n   //定义应用所需的组件:相机,场景,渲染器\n   init = ()=> {\n     \n\n      //相机参数\n      /**\n       * 正投影相机设置\n       */\n      var camera\n      var width = window.innerWidth; //窗口宽度\n      var height = window.innerHeight; //窗口高度\n     \n      camera = new THREE.OrthographicCamera(width / - 2, width / 2, height / 2, height / - 2, 1, 1000);\n      // camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 1000 );  // 相机\n      camera.position.set( 0, 0, 500); // z轴代表眼睛离屏幕的远近位置， xy代表与屏幕中心点 同一视平线， （默认位置为:0,0,0.）\n      // camera.lookAt(0,0,0);\n\n\n      // 生成渲染器\n      var renderer \n      renderer = new THREE.WebGLRenderer();  // 渲染器\n      renderer.setSize( window.innerWidth, window.innerHeight );  //设置渲染器的大小\n      document.body.appendChild( renderer.domElement ); \n     \n\n\n      // 材质\n      var material\n      material = new THREE.LineBasicMaterial( { color: 'white', linewidth: 2, } ); \n\n\n\n      // 画直线\n      var points = []; \n      points.push(\n         new THREE.Vector2( 0, 2*window.innerHeight, 0 ),\n         new THREE.Vector2( 0, -window.innerHeight/5, 0 ) \n       ); \n      \n\n\n      // 声明形状(画直线)\n      var geometry\n      geometry = new THREE.BufferGeometry().setFromPoints(points);\n\n\n\n      var mesh;\n      mesh = new THREE.Line( geometry, material );// 网格 \n      mesh.position.y = 700\n\n\n\n      // 声明场景\n      var scene\n      scene = new THREE.Scene(); // 场景\n      scene.add( mesh ); \n\n     \n\n\n       // animate\n       const animate = () => {\n       \n        if(mesh.position.y === window.innerHeight){\n          mesh.position.y = window.innerHeight/3\n          return \n        }\n\n\n        //移动物体x、y\n        if((mesh.position.y > -window.innerHeight/2)){\n          mesh.position.y -= 20\n        } else {\n          mesh.position.y = window.innerHeight\n        }\n\n        \n\n        //移动相机x、y、z\n        // if(camera.position.z < 500){\n        //   camera.position.y += 2\n        // }\n\n        renderer.clear()\n        renderer.render( scene, camera );\n\n        requestAnimationFrame( animate );\n      }\n\n\n      animate()\n }\n\n  \n  render (){\n    return (\n      <div className='line'>\n        <div id=\"info\">SUMO</div>\n      </div>\n    )\n  }\n}\n\nexport default Line","\n\nimport React, { Component } from 'react';\nimport * as THREE from 'three';\n// import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport './Curve.scss'\n\n\n\n\nclass Curve extends Component {\n  componentDidMount () {\n      this.init()\n  }\n\n   //定义应用所需的组件:相机,场景,渲染器\n   init = ()=> {\n      //相机参数\n      /**\n       * 正投影相机设置\n       */\n      var camera\n      var width = window.innerWidth; //窗口宽度\n      var height = window.innerHeight; //窗口高度\n     \n      camera = new THREE.OrthographicCamera(width / - 2, width / 2, height / 2, height / - 2, 1, 1000);\n      // camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 1000 );  // 相机\n      camera.position.set( 0, 0, 50); // z轴代表眼睛离屏幕的远近位置， xy代表与屏幕中心点 同一视平线， （默认位置为:0,0,0.）\n      // camera.lookAt(0,0,0);\n\n\n\n      // 生成渲染器\n      var renderer \n      renderer = new THREE.WebGLRenderer();  // 渲染器\n      renderer.setSize( window.innerWidth, window.innerHeight );  //设置渲染器的大小\n      document.body.appendChild( renderer.domElement ); \n\n\n      // 材质\n      var material\n      material = new THREE.LineBasicMaterial( { color: 'white', linewidth: 2, } ); \n\n\n      // 画弧线\n      var curve = new THREE.CatmullRomCurve3( [\n        new THREE.Vector3( 0, 500, 0 ),\n        new THREE.Vector3( 20, 200, 0 ),\n        new THREE.Vector3( -10, 0, 0 ),\n        new THREE.Vector3( -20, -150, 0 ),\n        new THREE.Vector3( 30, -500, 0 )\n      ] );\n\n\n      \n\n      var points = curve.getPoints(100); // 这个参数决定曲线是否， 50等分点\n    \n\n\n      // 声明形状(画直线)\n      var geometry\n      geometry = new THREE.BufferGeometry().setFromPoints(points);\n      // geometry.setAttribute( 'position', new THREE.Float32BufferAttribute( vertices, 3 ) ); // 3 代表3维坐标\n     \n     \n     \n      var mesh;\n      mesh = new THREE.Line( geometry, material );// 网格 \n\n\n\n\n      // 声明场景\n      var scene\n      scene = new THREE.Scene(); // 场景\n      scene.add( mesh ); \n\n     \n      for ( var i = 0; i < 100; i ++ ) {\n        mesh.position.x = ( Math.random() - 0.4 ) * 1000;\n        mesh.position.y = ( Math.random() - 0.5 );\n        mesh.position.z = ( Math.random() - 0.5 ) ;\n\n        console.log(mesh)\n        scene.add( mesh );\n      }\n\n\n       // animate\n       const animate = () => {\n        mesh.position.x = ( Math.random() - 0.9) * 600;\n       \n\n        renderer.clear()\n        renderer.render( scene, camera );\n\n        requestAnimationFrame( animate );\n      }\n\n\n      animate()\n }\n\n  \n  render (){\n    return (\n      <div className='curve'>\n        <div id=\"info\">Curve</div>\n      </div>\n    )\n  }\n}\n\nexport default Curve","import React, { Component } from 'react'\nimport './grid.scss'\n\nclass Index extends Component {\nrender(){\n  return (\n    <div>\n      <div className=\"navbar navbar-light\">\n    <div className=\"container\">\n        <div className=\"navbar-header\">\n            <button type=\"button\" className=\"navbar-toggle collapsed\"\n                    data-toggle=\"collapse\" data-target=\"#navbar\"\n                    aria-expanded=\"false\" aria-controls=\"navbar\">\n                <span className=\"sr-only\">Toggle navigation</span>\n                <span className=\"icon-bar\"></span>\n                <span className=\"icon-bar\"></span>\n                <span className=\"icon-bar\"></span>\n            </button>\n            <a className=\"navbar-brand\" href=\"#\">SKYPE</a>\n        </div>\n        <div id=\"navbar\" className=\"collapse navbar-collapse\">\n            <ul className=\"nav navbar-nav\">\n                <li className=\"active\"><a href=\"index.html\">Home</a> </li>\n                <li><a href=\"#aboutUS\">About</a> </li>\n                <li><a href=\"#service\">Service</a> </li>\n                <li><a href=\"#contact\">Contact</a> </li>\n\n            </ul>\n            {/* <ul className=\"nav navbar-nav navbar-sub  pull-right\">\n                <li><a href=\"#\">Register</a> </li>\n                <li><a href=\"#\">Login</a> </li>\n            </ul> */}\n        </div>\n    </div>\n</div>\n      \n      <section className=\"test1\">\n\n      </section>\n    \n    </div>\n    )\n}\n}\nexport default Index","import React, { Component } from 'react';\nimport CommonHeader from '../components/common/CommonHeader'\nimport  './viinet.scss';\n\nclass Index extends Component{\n  render(){\n    return(\n      <div id=\"viinet\">\n      这个人很懒，什么也没有留下\n      <br/>\n      这个人很懒，什么也没有留下\n      <br/>\n      这个人很懒，什么也没有留下\n      <br/>\n      这个人很懒，什么也没有留下\n      <br/>\n      这个人很懒，什么也没有留下\n      <br/>\n      这个人很懒，什么也没有留下\n      <br/>\n      \n      </div>\n    )\n  }\n}\n\nexport default Index","import React, { Component } from 'react';\nimport './index.scss'\n\nclass Index extends Component{\n  render(){\n    return(\n      <div id=\"common-header\">\n        <header>\n          <img src=\"https://cdn.cnviinet.com/viinet-web/static/Logotitle-202004262026.png\" alt=\"\"/>\n          <ul>\n            <li>首页</li>\n            <li>关于我们</li>\n            <li>产品与服务力</li>\n            <li>影响力</li>\n            <li>商业蓝图</li>\n            <li>APP下载</li>\n            <li>English</li>\n          </ul>\n        </header>\n      </div>\n    )\n  }\n}\n\nexport default Index","import domtoimage from 'dom-to-image';\nimport React, { Component } from 'react';\n\nclass Index extends Component{\n  render(){\n    return(\n      <div id=\"domNode\">\n      <div>\n       <h1>这是标题</h1>\n\n      </div>\n      </div>\n    )\n  }\n}\n\nexport default Index","import React from 'react';\nimport DomToImage from './../components/common/DomToImage/index'\n\nconst Index = () => (\n  \n  <div>\n    <p>Hello next.js</p>\n\n    <DomToImage/>\n  </div>\n)\n\nexport default Index\n","import React, { Component, Suspense, lazy } from 'react';\nimport {  BrowserRouter as Router, Route ,Switch, withRouter } from 'react-router-dom'\nimport InputItem from './components/common/InputItem'\nimport Interview from './components/hook/Interview'\nimport HtmlTag from './components/common/HtmlTag'\n// import JsTool from 'components/common/JsTool'\nimport Animate from './pages/animate'\nimport Line from './pages/threejs/Line'\nimport Axis from './pages/threejs/axis'\nimport Curve from './pages/threejs/Curve'\nimport Home from './pages/home'\nimport Grid from './pages/grid'\nimport Viinet from './pages/viinet'\nimport IndexHome from './pages/index'\n// import dynamic from 'next/dynamic'\nimport './App.css';\n\n// // 使用 Mock\n// var Mock = require('mockjs')\n// Mock.setup({\n//   timeout: 400\n// })\n// var Random = Mock.Random\n// var data = Mock.mock({\n//     // 属性 list 的值是一个数组，其中含有 1 到 10 个元素\n//     'list|1-10': [{\n//         // 属性 id 是一个自增数，起始值为 1，每次增 1\n//         'id|+1': 1,\n//         'age|4-55': 4,\n//         'aj|4': 2,\n//         'address': Random.county(), //(每条数据都一样 )  or @county(每条数据都不一样)\n//         'email': '@email', // or Random.email(),\n//         'firstName': '@capitalize(@name)', // == Random.capitalize(Random.name()), @name = Random.name(), @capitalize = Random.capitalize(),差别在于@ 符 生成的值在遍历过程中是随机的，Rondom.则是固定一个值，， 姓名的首字母大写\n//         'idcard': '@id', // 随机生成一个18位身份证\n//         'date': '@date(\"yyyy-MM-dd\")'\n//     }]\n// })\n// // 输出结果\n// console.log(JSON.stringify(data, null, 4))\n\nexport const HomeComponent = lazy(() => import('./pages/home'))\nexport const HtmlTagComponent = lazy(() => import('./pages/home'))\n\n// const HomeComponent = dynamic(  // 自定义加载组件 nextjs\n//   import('../components/loading'),\n//   {\n//     loading: () => <p>...</p>\n//   }\n// )\n\nclass App extends Component {\n  render(){\n    document.body.style.setProperty('--themeColor', '#ff0000'); // css 变量方法\n    return (\n      \n      <div className=\"App\">\n          {/* <Router> */}\n            {/* fallback属性也可以是组件，但是目前只支持组件加载的loading，不支持发送请求的loading */}\n            <Suspense fallback=\"正在加载中...\"> \n                <HomeComponent />\n                <HtmlTagComponent/>\n            </Suspense>\n\n            <Switch>\n                <Route path='/index-home'  component={IndexHome} />\n                <Route path='/home'  component={Home} />\n                <Route path='/htmlTag'  component={HtmlTag} />\n                <Route path='/inputItem' component={InputItem} />\n                <Route path='/animate' component={Animate} />\n                <Route path='/grid' component={Grid} />\n                <Route path='/line' component={Line} />\n                <Route path='/axis' component={Axis} />\n                <Route path='/curve' component={Curve} />\n                <Route path='/inter' component={Interview} />\n                <Route path='/viinet' component={Viinet} />\n           </Switch>\n           {/* </Router> */}\n           {/* <Pdf/> */}\n         </div>\n      \n       );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<BrowserRouter ><App /></BrowserRouter> , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}