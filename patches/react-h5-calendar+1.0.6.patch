diff --git a/node_modules/react-h5-calendar/.DS_Store b/node_modules/react-h5-calendar/.DS_Store
new file mode 100644
index 0000000..166bdb1
Binary files /dev/null and b/node_modules/react-h5-calendar/.DS_Store differ
diff --git a/node_modules/react-h5-calendar/es/calendar.css b/node_modules/react-h5-calendar/es/calendar.css
index e8b2486..667eb19 100644
--- a/node_modules/react-h5-calendar/es/calendar.css
+++ b/node_modules/react-h5-calendar/es/calendar.css
@@ -26,6 +26,7 @@
 .react-h5-calendar .calendar-operate .icon img {
   width: auto;
   height: 16px;
+  filter: brightness(0.5);
 }
 .react-h5-calendar .calendar-operate .icon.left-icon {
   transform: rotate(180deg);
@@ -79,7 +80,8 @@
 }
 .react-h5-calendar .calendar-body .month-cell .day-cell .current-day {
   color: #fff;
-  background: #4378be;
+  background: red;
+  /* background: #4378be; */
   border-radius: 50%;
 }
 .react-h5-calendar .calendar-body .month-cell .day-cell .circle-mark {
diff --git a/node_modules/react-h5-calendar/es/calendar.js b/node_modules/react-h5-calendar/es/calendar.js
index c949cdf..5aab5ec 100644
--- a/node_modules/react-h5-calendar/es/calendar.js
+++ b/node_modules/react-h5-calendar/es/calendar.js
@@ -22,7 +22,7 @@ function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) ===
 
 function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
 
-function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }
+function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () { })); return true; } catch (e) { return false; } }
 
 function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
 
@@ -37,7 +37,6 @@ var head = ['日', '一', '二', '三', '四', '五', '六'];
 
 var MonthView = /*#__PURE__*/function (_PureComponent) {
   _inherits(MonthView, _PureComponent);
-
   var _super = _createSuper(MonthView);
 
   function MonthView(props) {
@@ -75,6 +74,13 @@ var MonthView = /*#__PURE__*/function (_PureComponent) {
     }, 25);
 
     _this.handleTouchStart = function (e) {
+      _this.setState({
+        touch: {
+          x: 0,
+          y: 0
+        }
+      });
+      return
       e.stopPropagation();
       _this.touchStartPositionX = e.touches[0].clientX;
       _this.touchStartPositionY = e.touches[0].clientY;
@@ -89,10 +95,10 @@ var MonthView = /*#__PURE__*/function (_PureComponent) {
       var disableWeekView = _this.props.disableWeekView;
       var calendarHeight = _this.calendarRef.current.offsetHeight;
       var _this$state = _this.state,
-          touch = _this$state.touch,
-          translateIndex = _this$state.translateIndex,
-          currentMonthFirstDay = _this$state.currentMonthFirstDay,
-          currenWeekFirstDay = _this$state.currenWeekFirstDay;
+        touch = _this$state.touch,
+        translateIndex = _this$state.translateIndex,
+        currentMonthFirstDay = _this$state.currentMonthFirstDay,
+        currenWeekFirstDay = _this$state.currenWeekFirstDay;
       _this.f = false;
       _this.isTouching = false;
       var absTouchX = Math.abs(touch.x);
@@ -159,15 +165,17 @@ var MonthView = /*#__PURE__*/function (_PureComponent) {
 
     _this.handleMonthToggle = function (type) {
       var _this$state2 = _this.state,
-          currentMonthFirstDay = _this$state2.currentMonthFirstDay,
-          currenWeekFirstDay = _this$state2.currenWeekFirstDay,
-          showType = _this$state2.showType;
+        currentMonthFirstDay = _this$state2.currentMonthFirstDay,
+        currenWeekFirstDay = _this$state2.currenWeekFirstDay,
+        showType = _this$state2.showType;
       var isMonthView = showType === 'month';
       var isPrev = type === 'prev';
       var formatFun = isMonthView ? formatMonthData : formatWeekData;
       var operateDate = isMonthView ? currentMonthFirstDay : currenWeekFirstDay;
       var updateStateData = formatFun(operateDate[isPrev ? 'subtract' : 'add'](1, isMonthView ? 'month' : 'week'));
 
+      // console.log('type', type)
+
       _this.setState(updateStateData, function () {
         var dataArray = updateStateData[isMonthView ? 'monthDates' : 'weekDates'][1];
 
@@ -203,27 +211,29 @@ var MonthView = /*#__PURE__*/function (_PureComponent) {
 
   _createClass(MonthView, [{
     key: "handleBottomOperate",
-    value: function handleBottomOperate() {}
+    value: function handleBottomOperate() { }
   }, {
     key: "render",
     value: function render() {
       var _this2 = this;
 
+
       var _this$state3 = this.state,
-          monthDates = _this$state3.monthDates,
-          weekDates = _this$state3.weekDates,
-          touch = _this$state3.touch,
-          translateIndex = _this$state3.translateIndex,
-          calendarY = _this$state3.calendarY,
-          currentMonthFirstDay = _this$state3.currentMonthFirstDay,
-          currenWeekFirstDay = _this$state3.currenWeekFirstDay,
-          showType = _this$state3.showType;
+        monthDates = _this$state3.monthDates,
+        weekDates = _this$state3.weekDates,
+        touch = _this$state3.touch,
+        translateIndex = _this$state3.translateIndex,
+        calendarY = _this$state3.calendarY,
+        currentMonthFirstDay = _this$state3.currentMonthFirstDay,
+        currenWeekFirstDay = _this$state3.currenWeekFirstDay,
+        showType = _this$state3.showType;
       var _this$props = this.props,
-          currentDate = _this$props.currentDate,
-          transitionDuration = _this$props.transitionDuration,
-          markDates = _this$props.markDates,
-          markType = _this$props.markType,
-          disableWeekView = _this$props.disableWeekView;
+        currentDate = _this$props.currentDate,
+        transitionDuration = _this$props.transitionDuration,
+        markDates = _this$props.markDates,
+        markType = _this$props.markType,
+        disableWeekView = _this$props.disableWeekView;
+
       var isMonthView = showType === 'month';
       return /*#__PURE__*/React.createElement("div", {
         className: "react-h5-calendar"
@@ -270,18 +280,24 @@ var MonthView = /*#__PURE__*/function (_PureComponent) {
           var isMarkDate = markDates.find(function (i) {
             return date.isSame(i.date, 'day');
           });
+          let marketColor = isMarkDate ? isMarkDate.color : '#4378be'
+          // console.log('marketColor', marketColor)
+
           var resetMarkType = isMarkDate && isMarkDate.markType || markType;
           var showDotMark = isCurrentDay ? false : isMarkDate && resetMarkType === 'dot';
           var showCircleMark = isCurrentDay ? false : isMarkDate && resetMarkType === 'circle';
+
           return /*#__PURE__*/React.createElement("div", {
             key: itemIndex,
             className: "day-cell ".concat(isOtherMonthDay ? 'is-other-month-day' : ''),
             onClick: _this2.handleDayClick.bind(_this2, date)
           }, /*#__PURE__*/React.createElement("div", {
             className: "day-text ".concat(isCurrentDay ? 'current-day' : '', " ").concat(showCircleMark ? 'circle-mark' : ''),
-            style: showCircleMark ? {
-              borderColor: isMarkDate.color || '#4378be'
-            } : null
+            style: showCircleMark
+              ? { borderColor: isMarkDate.color || '#4378be', }
+              : isCurrentDay
+                ? { background: marketColor || '#4378be' }
+                : null,
           }, date.format('DD')), showDotMark && /*#__PURE__*/React.createElement("div", {
             className: isMarkDate ? 'dot-mark' : '',
             style: {
@@ -332,11 +348,11 @@ MonthView.defaultProps = {
   currentDate: dayjs().format('YYYY-MM-DD'),
   showType: 'month',
   transitionDuration: 0.3,
-  onDateClick: function onDateClick() {},
-  onTouchStart: function onTouchStart() {},
-  onTouchMove: function onTouchMove() {},
-  onTouchEnd: function onTouchEnd() {},
-  onToggleShowType: function onToggleShowType() {},
+  onDateClick: function onDateClick() { },
+  onTouchStart: function onTouchStart() { },
+  onTouchMove: function onTouchMove() { },
+  onTouchEnd: function onTouchEnd() { },
+  onToggleShowType: function onToggleShowType() { },
   markType: 'dot',
   markDates: [],
   disableWeekView: false
diff --git a/node_modules/react-h5-calendar/lib/calendar.js b/node_modules/react-h5-calendar/lib/calendar.js
index e0046b2..f258d86 100644
--- a/node_modules/react-h5-calendar/lib/calendar.js
+++ b/node_modules/react-h5-calendar/lib/calendar.js
@@ -49,7 +49,7 @@ function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) ===
 
 function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
 
-function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }
+function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () { })); return true; } catch (e) { return false; } }
 
 function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
 
@@ -73,7 +73,6 @@ var MonthView = /*#__PURE__*/function (_PureComponent) {
       var moveY = e.touches[0].clientY - _this.touchStartPositionY;
       var calendarWidth = _this.calendarRef.current.offsetWidth;
       var calendarHeight = _this.calendarRef.current.offsetHeight;
-
       if (Math.abs(moveX) > Math.abs(moveY)) {
         // 左右滑动
         _this.setState({
@@ -109,10 +108,10 @@ var MonthView = /*#__PURE__*/function (_PureComponent) {
       var disableWeekView = _this.props.disableWeekView;
       var calendarHeight = _this.calendarRef.current.offsetHeight;
       var _this$state = _this.state,
-          touch = _this$state.touch,
-          translateIndex = _this$state.translateIndex,
-          currentMonthFirstDay = _this$state.currentMonthFirstDay,
-          currenWeekFirstDay = _this$state.currenWeekFirstDay;
+        touch = _this$state.touch,
+        translateIndex = _this$state.translateIndex,
+        currentMonthFirstDay = _this$state.currentMonthFirstDay,
+        currenWeekFirstDay = _this$state.currenWeekFirstDay;
       _this.f = false;
       _this.isTouching = false;
       var absTouchX = Math.abs(touch.x);
@@ -147,7 +146,6 @@ var MonthView = /*#__PURE__*/function (_PureComponent) {
             showType: 'month'
           }, function () {
             var dataArray = _this.state.monthDates[1];
-
             _this.props.onToggleShowType({
               showType: _this.state.showType,
               startTime: dataArray[0].valueOf(),
@@ -179,18 +177,16 @@ var MonthView = /*#__PURE__*/function (_PureComponent) {
 
     _this.handleMonthToggle = function (type) {
       var _this$state2 = _this.state,
-          currentMonthFirstDay = _this$state2.currentMonthFirstDay,
-          currenWeekFirstDay = _this$state2.currenWeekFirstDay,
-          showType = _this$state2.showType;
+        currentMonthFirstDay = _this$state2.currentMonthFirstDay,
+        currenWeekFirstDay = _this$state2.currenWeekFirstDay,
+        showType = _this$state2.showType;
       var isMonthView = showType === 'month';
       var isPrev = type === 'prev';
       var formatFun = isMonthView ? _util.formatMonthData : _util.formatWeekData;
       var operateDate = isMonthView ? currentMonthFirstDay : currenWeekFirstDay;
       var updateStateData = formatFun(operateDate[isPrev ? 'subtract' : 'add'](1, isMonthView ? 'month' : 'week'));
-
       _this.setState(updateStateData, function () {
         var dataArray = updateStateData[isMonthView ? 'monthDates' : 'weekDates'][1];
-
         _this.props.onTouchEnd(dataArray[0].valueOf(), dataArray[dataArray.length - 1].add(1, 'day').valueOf());
       });
     };
@@ -218,34 +214,35 @@ var MonthView = /*#__PURE__*/function (_PureComponent) {
     };
     _this.isTouching = false;
     _this.calendarRef = /*#__PURE__*/(0, _react.createRef)(null);
+
     return _this;
   }
 
   _createClass(MonthView, [{
     key: "handleBottomOperate",
-    value: function handleBottomOperate() {}
+    value: function handleBottomOperate() { }
   }, {
     key: "render",
     value: function render() {
       var _this2 = this;
-
       var _this$state3 = this.state,
-          monthDates = _this$state3.monthDates,
-          weekDates = _this$state3.weekDates,
-          touch = _this$state3.touch,
-          translateIndex = _this$state3.translateIndex,
-          calendarY = _this$state3.calendarY,
-          currentMonthFirstDay = _this$state3.currentMonthFirstDay,
-          currenWeekFirstDay = _this$state3.currenWeekFirstDay,
-          showType = _this$state3.showType;
+        monthDates = _this$state3.monthDates,
+        weekDates = _this$state3.weekDates,
+        touch = _this$state3.touch,
+        translateIndex = _this$state3.translateIndex,
+        calendarY = _this$state3.calendarY,
+        currentMonthFirstDay = _this$state3.currentMonthFirstDay,
+        currenWeekFirstDay = _this$state3.currenWeekFirstDay,
+        showType = _this$state3.showType;
       var _this$props = this.props,
-          currentDate = _this$props.currentDate,
-          transitionDuration = _this$props.transitionDuration,
-          markDates = _this$props.markDates,
-          markType = _this$props.markType,
-          disableWeekView = _this$props.disableWeekView;
+        currentDate = _this$props.currentDate,
+        transitionDuration = _this$props.transitionDuration,
+        markDates = _this$props.markDates,
+        markType = _this$props.markType,
+        disableWeekView = _this$props.disableWeekView;
       var isMonthView = showType === 'month';
-      return /*#__PURE__*/_react.default.createElement("div", {
+
+      return /*#__PURE__*/ _react.default.createElement("div", {
         className: "react-h5-calendar"
       }, /*#__PURE__*/_react.default.createElement("div", {
         className: "calendar-operate"
@@ -352,11 +349,11 @@ MonthView.defaultProps = {
   currentDate: (0, _dayjs.default)().format('YYYY-MM-DD'),
   showType: 'month',
   transitionDuration: 0.3,
-  onDateClick: function onDateClick() {},
-  onTouchStart: function onTouchStart() {},
-  onTouchMove: function onTouchMove() {},
-  onTouchEnd: function onTouchEnd() {},
-  onToggleShowType: function onToggleShowType() {},
+  onDateClick: function onDateClick() { },
+  onTouchStart: function onTouchStart() { },
+  onTouchMove: function onTouchMove() { },
+  onTouchEnd: function onTouchEnd() { },
+  onToggleShowType: function onToggleShowType() { },
   markType: 'dot',
   markDates: [],
   disableWeekView: false
